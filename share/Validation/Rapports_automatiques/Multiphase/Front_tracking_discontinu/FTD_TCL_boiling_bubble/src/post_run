#!/bin/bash
echo "Begin post_run with $1"
err=$1.err
cwd=$PWD
[ -f PAR_source.err ] && cd .. && cat $(ls -rt R*/PAR_source.err | awk '{print $NF}') > PAR_source_Multirun.err && err=../PAR_source_Multirun.err && cd - >/dev/null
[ ! -f $err ] && echo "Error in post_run. $err is missing" && exit -1

grep "instant-Q" $err | awk '{print $5, $6, $7}' > instant_Qmic_meso.txt
grep "Volume_phase_0" $err | awk '{print $4, $2}' > vap_vol.txt
[ $(wc -l vap_vol.txt| awk '{print $1}') != 0 ] && v0=$(head -n1 vap_vol.txt | awk '{print $2}') || v0=0.
d0=$(python3 -c 'from math import pi; v='$v0'; d=(6*v/pi)**(1./3.); print(d)')
awk '{print $1*1000, '$d0'*($2/'$v0')^(1/3)}' vap_vol.txt > dia_full.txt ; awk 'NR % 100 == 0' dia_full.txt > dia.txt
grep "vevap_int" $err | awk '{print $6, $3}' > micro_vap.txt                # What is it? 
awk '{print $1*1000, '$d0'*($2/'$v0')^(1/3)}' micro_vap.txt > dia_micro.txt # What is it? 
grep "v_cl_test=" $err | awk '{print $6, $4}' > CL_vel.txt
grep "instantaneous meso-evaporation =" $err | awk '{print $3, -$7}' > meso.txt
grep "Instantaneous tcl-evaporation =" $err | awk '{print $3, $7}' > tcl.txt
awk '{print $1*1000, '$d0'*($2/'$v0')^(1/3)}' tcl.txt > dia_tcl.txt
grep "theta_app_degree=" $err | awk '{print $9, $11}' > theta_app.txt


\rm -rf lata/post-ascii.lata*
[ -f lata/post.lata ] && sed "/dom/d" lata/post.lata > lata/post-interf.lata && lata_analyzer lata/post-interf.lata asciiout writelata_convert=lata/post-interf-ascii.lata && echo "Conversion to lata/post-interf-ascii.lata with success"
#grep "time_sommet_tcl=" $err | awk '{print $6*1000, ($4/'$v0')^(1/3)}' > base_dia.txt 
if [ -f lata/post-interf-ascii.lata ] ; then
   echo "Generate interface-position.txt"
   echo "# t    rmin rmax xmax ymax ymin rcl" > interface-position.txt
   for fic in `ls -n lata/post-interf-ascii_post.lata.INTERFACES.0.*[0-9] | awk '{print $NF}'`
   do
      time=$(echo $fic | awk -FFACES. '{print $2}')
      sed '1d;$d' $fic | awk 'NR == 1 { xmax=$1; xcl=$1; ymax=$2; ymin=$2; rmin=sqrt($1*$1+$2*$2) ; rmax=sqrt($1*$1+$2*$2) }
      { r=sqrt($1*$1+$2*$2); if ($1>xmax) xmax=$1; if ($2>ymax) ymax=$2; if ($2<ymin) {ymin=$2; xcl=$1}; if (r>rmax) rmax=r; if (r<rmin) rmin=r; }
      END {printf "%g %g %g %g %g %g %g\n", "'$time'", rmin, rmax, xmax, ymax, ymin, xcl}' >> interface-position.txt
      echo -n "."
   done
   echo ""
   awk '{print $1*1000, $7}' interface-position.txt > base_dia.txt 
fi

echo "End of post_run for $1"

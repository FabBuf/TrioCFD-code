#!/bin/bash
# Creates erru_Re1.dat, erru_Re100.dat, errp_Re1.dat and errp_Re100.dat
# Each generated file contains 7 columns :
#   column 1 : total number of elements
#   column 2 : P0 discretization
#   column 3 : P1 discretization
#   column 4 : P0P1 discretization
#   column 5 : P0P1Pa discretization
#   column 6 : P0RT discretization

Parameter="Re1 Re100"

for Re in $Parameter ; do

   fnameu="erru_"$Re".dat"
   fnamep="errp_"$Re".dat"

   [ -f $fnameu ] && rm $fnameu
   [ -f $fnamep ] && rm $fnamep
   
   printf "# nbelem      P0            P1             P0P1          P0P1Pa          P0RT\n" >> $fnameu
   printf "# nbelem      P0            P1             P0P1          P0P1Pa          P0RT\n" >> $fnamep
   # Calculs sequentiels  
   for num in `seq 1 3`; do

        fold1="mesh_"$num"/P0/"$Re
        fold2="mesh_"$num"/P1/"$Re
        fold3="mesh_"$num"/P0P1/"$Re
        fold4="mesh_"$num"/P0P1Pa/"$Re
        fold5="mesh_"$num"/P0RT/"$Re

        nb=`grep "Total number of elements" $fold1/StatVortex.err | awk '{print $NF}'`

        erru1=`cat $fold1/StatVortex_ERRU.son | tail -1 | awk '{printf "%11.8e", $2}'`
        erru2=`cat $fold2/StatVortex_ERRU.son | tail -1 | awk '{printf "%11.8e", $2}'`
        erru3=`cat $fold3/StatVortex_ERRU.son | tail -1 | awk '{printf "%11.8e", $2}'`
        erru4=`cat $fold4/StatVortex_ERRU.son | tail -1 | awk '{printf "%11.8e", $2}'`
        erru5=`cat $fold5/StatVortex_ERRU.son | tail -1 | awk '{printf "%11.8e", $2}'`

        errp1=`cat $fold1/StatVortex_ERRP.son | tail -1 | awk '{printf "%11.8e", $2}'`
        errp2=`cat $fold2/StatVortex_ERRP.son | tail -1 | awk '{printf "%11.8e", $2}'`
        errp3=`cat $fold3/StatVortex_ERRP.son | tail -1 | awk '{printf "%11.8e", $2}'`
        errp4=`cat $fold4/StatVortex_ERRP.son | tail -1 | awk '{printf "%11.8e", $2}'`
        errp5=`cat $fold5/StatVortex_ERRP.son | tail -1 | awk '{printf "%11.8e", $2}'`

        printf "%6d   %11.8e %11.8e %11.8e %11.8e %11.8e %11.8e\n" $nb $erru1 $erru2 $erru3 $erru4 $erru5 >> $fnameu
        printf "%6d   %11.8e %11.8e %11.8e %11.8e %11.8e %11.8e\n" $nb $errp1 $errp2 $errp3 $errp4 $errp5 >> $fnamep
        

  done
done

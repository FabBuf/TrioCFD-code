#!/bin/bash
# Ce script est execute avant de lancer les cas tests

# Generation des interfaces pour l'etat initial:
# On suppose que gmsh a deja ete execute avec cette commande:
# gmsh bulle3.geo -2

# Generation d'un bulle  :
cat >deplacements.txt <<EOF
0.0015823 0.0015798 0.00151354 bulle3.msh
EOF

./cree_multi_bulles.sh deplacements.txt init.lata

# cat >deplacements3.txt <<EOF
# 0.0015823 0.0015798 0.00151354 bulle3.msh
# 0.0045867 0.0010343 0.00155486 bulle3.msh
# 0.0055337 0.0029443 0.00155486 bulle3.msh
# EOF
# ./cree_multi_bulles.sh deplacements3.txt init_multi.lata

declare -A schemes=( ["EULER"]="euler_explicit" ["RK3"]="RK3_FT")
list_n="1 5 10 20 50 100"
for fold in "PRESSION_SEULE" "PRESSION_UNIFORME" "PRESSION_SINUSOIDALE"
do
   echo "********* $fold *********"
   mkdir -p $fold
   if [ $fold == "PRESSION_SEULE" ] ; then
      sed -e "s@expression_variable_source_x .*@expression_variable_source_x sin(x)*cos(t*0.)@g" \
          -e "s@expression_variable_source_y .*@expression_variable_source_y sin(y)*cos(t*0.)@g" \
          -e "s@expression_variable_source_z .*@expression_variable_source_z 0.@g" \
          -e "s@expression_p_ana .*@expression_p_ana   (cos(x)+cos(y)+0.*sin(z))*cos(t*0.)@g" \
          -e "s@expression_p_init .*@expression_p_init (cos(x)+cos(y)+0.*sin(z))*cos(0.)@g" \
          -e "s@expression_vx_ana .*@expression_vx_ana 0.@g" \
          -e "s@expression_vx_init .*@expression_vx_init 0.@g" \
          -e "s@expression_vy_ana .*@expression_vy_ana 0.@g" \
          -e "s@expression_vy_init .*@expression_vy_init 0.@g" \
          -e "s@expression_vz_ana .*@expression_vz_ana 0.@g" \
          -e "s@expression_vz_init .*@expression_vz_init 0.@g" \
	     template.data > $fold/template.data
   elif [ $fold == "PRESSION_UNIFORME" ] ; then
      sed -e "s/expression_variable_source_z .*/expression_variable_source_z 0./g" \
          -e "s/expression_p_ana .*/expression_p_ana 0./g" \
          -e "s/expression_p_init .*/expression_p_init 0./g" \
	     template.data > $fold/template.data
   else
      \cp -f template.data $fold/
   fi
   cd $fold
   ln -sf ../init.lata* .
   for sch in "${!schemes[@]}"
   do
      echo "${schemes[$sch]}"
      for n in $list_n
      do
         echo -n "Niveau $n "
         mkdir -p $sch/Niv$n
         \cp -f init*.lata* $sch/Niv$n
         nit=`echo 500/$n|bc`
         dt=`echo 0.002*$n|bc` # Soit un tfin de 1.0s
         echo " ${schemes[$sch]} $nit $dt"
         sed -e "s/time_scheme .*/  time_scheme ${schemes[$sch]} /g" \
             -e "s/nb_pas_dt_max .*/  nb_pas_dt_max $nit /g" \
             -e "s/timestep .*/  timestep $dt /g" template.data > ${sch}/Niv${n}/calcul.data
      done
   done
   \cp -f ../post_run EULER/Niv5/
   \cp -f ../post_run RK3/Niv5/
   cd ..
done
echo "********* End of prepare *********"

